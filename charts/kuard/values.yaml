## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  # env: local
  env: development
  hookDeletePolicy: before-hook-creation
  system:
    storageclass: "local-path"
  tests: "no"

## @param clusterDomain Kubernetes Cluster Domain
##
clusterDomain: cluster.local

name: "kuard"
port: 8080
updateStrategy: RollingUpdate
hookEenabled: true
replicaCount: 1

image:
  repository: gcr.io/kuar-demo/kuard-amd64
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "purple"

envs:
  LOG_LEVEL:
    _default: DEBUG
    production: ERROR
  TZ:
    _default: Europe/Kiev

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

# https://docs.giantswarm.io/advanced/ingress/configuration/
ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /$1
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # ingress.kubernetes.io/add-base-url: "true"
    # nginx.ingress.kubernetes.io/add-base-url: "true"
    # nginx.ingress.kubernetes.io/app-root: /
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # /kuard => / - path: /kuard/(.+)
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: $1$2
  host:
    _default:
      name: none
      tls: ""
      services:
        - path: /
          name: ""
          port: ""
          pathType: Prefix
    local:
      name: demo.lvh.me
      tls: ""
      services:
        - path: /
          name: ""
          port: ""
          pathType: Prefix
  hosts: []
  # hosts:
  #   - host: chart-example.local
  #     paths: []
  tls: []
  # #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  # _default: worker
  _default: {}
  local: 
    role: worker
    other: olala

tolerations: []

affinity: {}
