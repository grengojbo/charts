# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  env: development
  hookDeletePolicy: before-hook-creation
  system:
    storageclass: "local-path"
  tests: "no"

## @param clusterDomain Kubernetes Cluster Domain
##
clusterDomain: cluster.local

## @param clusterName Cluster Name Grafana Cloud
##
clusterName: cloud

replicaCount: 1

namespaceSelectorLoki:
  - default
  
# https://github.com/klaushofrichter/istio/blob/master/grafana-cloud/grafana-cloud-deploy.sh
monitoring:
  remoteWrite: https://monitoring-prod-01-eu-west-0.grafana.net/api/prom/push
  username: 123456
  apiKey: noname
  extraScrapeConfigs: []
  # extraScrapeConfigs:
  #   - source_labels: [__meta_kubernetes_endpoint_node_name]
  #     action: replace
  #     target_label: node
  extraVolumes: []
  extraVolumeMounts: []
  # tolerations:
  #   - key: CriticalAddonsOnly
  #     operator: Exists
  #   - operator: Exists
  #     effect: NoSchedule
  # kubectl patch deployment grafana-agent -n grafana-cloud -p '{"spec":{"template":{"spec":{"containers":[{"name":"agent","resources":{"limits":{"cpu":"800m","memory":"800M"},"requests":{"cpu":"200m","memory":"200M"}}}]}}}}' 

# https://github.com/klaushofrichter/istio/blob/master/fluentbit/fluentbit-deploy.sh
log:
  enabled: true
  collector: loki
  remoteWrite: https://logs-prod-eu-west-0.grafana.net/loki/api/v1/push
  username: 123456
  apiKey: noname
  journal: enabled
  # https://grafana.com/blog/2020/07/21/loki-tutorial-how-to-send-logs-from-eks-with-promtail-to-get-full-visibility-in-grafana/
  extraScrapeConfigs: []
  extraVolumes: []
  extraVolumeMounts: []

pipelineStages: cri # docker

# node-exporter:
# Support LENS https://github.com/klaushofrichter/k3d-prometheus-lens/commit/a00bc0e26012d7bc93855f0a04eacba0dbfd98b8#diff-4ab1387efe2b2c631a090d373c47d473d6fd2e1fd17b2b0debcc770da60a7307
node-exporter:
  nameOverride: node-exporter
  # fullnameOverride: node-exporter
  enabled: true
  service:
    labels:
      jobLabel: node-exporter
  serviceMonitor:
    enabled: true
    jobLabel: jobLabel
    relabelings:
      - regex: (.+)
        sourceLabels:
          - __meta_kubernetes_endpoint_node_name
        targetLabel: node

kube-state-metrics:
  nameOverride: kube-state-metrics
  enabled: true
  image:
    tag: v2.4.2

image:
  repository: grafana/agent
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.25.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# ingress:
#   enabled: false
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths: []
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
